//opencv提供了一个简单的函数用于提取连通区域轮廓，即cv::findContours

std::vector<std::vector<cv::Point>>contours;
cv::findContours(
            image,
            contours,//轮廓的数组
            CV_RETR_EXTERNAL,//获取外轮廓
            CV_CHAIN_APPOX_NONE//获取每个轮廓的每个像素
            );

//输入端是一幅二值图像，输出的是轮廓的向量，轮廓本身又是cv::Points的向量

//----------
//在白色图像上绘制黑色轮廓
cv::Mat result(image.size(),CV_8U::Scalar(255));
cv::drawContour(
          result,contours,
          -1,//绘制所有轮廓（可用来指定需要绘制的轮廓的索引值）
          cv::Scalar(0),//颜色为黑色
           2 //轮廓线的绘制宽度为2
            );

//----------------
//移除过长或过短的轮廓
int cmin=100; //最小轮廓长度
int cmax=1000;//最大轮廓长度
std::vector<std::vector<cv::Point>>::const_iterator itc=contours.begin();
while(itc!=contours.end()){
         if(itc->size()<cmin||itc->size()>cmax)
                itc=contours.erase(itc);
         else
                ++itc;
      }



//-----------
//不同的标志,
//CV_RETR_LIST; CV_RETR_TREE; CV_RETR_CCOMP